---
import "../styles/global.css";
const { content } = Astro.props;
import { Navigation } from "@/components/navbar/Navigation";
import PageTransition from "@/components/PageTransition";
import { ClientRouter } from "astro:transitions";

const defaultMeta = {
  siteName: "Irvan Pramana - Backend Developer",
  description:
    "Irvan Pramana - Backend developer specializing in Java and Golang, with expertise in Spring Boot and distributed systems.",
  type: "website",
  image: "https://avatars.githubusercontent.com/u/52144823",
  twitterHandle: "@wagbosol",
  siteURL: "https://irvn.dev",
  title: "Irvan Pramana - Backend Developer",
  keywords:
    "irvan pramana, irvan pramana putra, backend developer, Java, Golang, Spring Boot, distributed systems, API development",
  canonicalURL: new URL(Astro.url.pathname, Astro.site || "https://irvn.dev"),
};

const meta = {
  ...defaultMeta,
  title: content?.title || defaultMeta.siteName,
  description: content?.description || defaultMeta.description,
  image: content?.image || defaultMeta.image,
  canonicalURL: content?.canonicalURL
    ? new URL(content.canonicalURL, Astro.site)
    : defaultMeta.canonicalURL,
};
---

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };
  const isDark = getThemePreference() === "dark";
  document.documentElement.classList[isDark ? "add" : "remove"]("dark");

  if (typeof localStorage !== "undefined") {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }
</script>

<script>
  document.addEventListener("astro:after-swap", () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      const theme = localStorage.getItem("theme");
      if (theme === "dark") {
        document.documentElement.classList.add("dark");
      } else {
        document.documentElement.classList.remove("dark");
      }
    }
  });
</script>

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <ClientRouter />

    <!-- Primary Meta Tags -->
    <title>{meta.title}</title>
    <meta name="title" content={meta.title} />
    <meta name="description" content={meta.description} />
    <meta name="keywords" content={meta.keywords} />
    <meta name="author" content="Irvan Pramana" />
    <link rel="canonical" href={meta.canonicalURL} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={meta.type} />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={meta.title} />
    <meta property="og:description" content={meta.description} />
    <meta property="og:image" content={meta.image} />
    <meta property="og:site_name" content={meta.siteName} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={meta.title} />
    <meta property="twitter:description" content={meta.description} />
    <meta property="twitter:image" content={meta.image} />
    <meta property="twitter:creator" content={meta.twitterHandle} />

    <!-- Structured Data / JSON-LD -->
    <script
      type="application/ld+json"
      set:html={JSON.stringify({
        "@context": "https://schema.org",
        "@type": "Person",
        name: "Irvan Pramana",
        url: Astro.site,
        image: meta.image,
        jobTitle: "Backend Developer",
        sameAs: [
          "https://instagram.com/0xirvan",
          "https://linkedin.com/in/0xirvan",
          "https://github.com/0xirvan",
        ],
        description: meta.description,
      })}
    />

    <script>
      document.addEventListener("DOMContentLoaded", async () => {
        const { webVitals } = await import("../lib/seo");
        webVitals();
      });
    </script>
  </head>
  <body>
    <div class="w-full">
      <div class="w-full container max-w-2xl mx-auto px-4 pb-28">
        <main
          class="w-full flex items-start justify-center leading-[1.75] min-h-screen relative tracking-wide"
        >
          <PageTransition pathname={Astro.url.pathname} client:load>
            <slot />
          </PageTransition>
        </main>
      </div>
      <Navigation currentPath={Astro.url.pathname} client:load />
    </div>
  </body>
</html>
